#!/bin/bash

file="$HOME/.hours"

if [ $# -gt 0 ]; then
    case $1 in
        start|s|st|sta|star) echo -n "`date +%s` " >> ${file} ;;
        end|en)
            {
            echo -n "`date +%s`"
            if [ $# -gt 1 ]; then
                shift
                echo -n " $@"
            fi
            echo ""
            } >> ${file}
            ;;
        edit|ed|edi) exec vim ${file} ;;
    esac
else
    awk ' \
    BEGIN {
        prevDay = ""
        printf(":: Entries ::\n")
    }

    NF > 1 && $0 !~ /^#/ {
        # Store for later use
        secs=$2-$1
        day=strftime("%Y%m%d", $1)
        daily[day] += secs

        # Print a newline between the entries of a single day
        if (prevDay == "") {
            prevDay = day
        } else if (prevDay != day) {
            printf("\n")
            prevDay = day
        }

        # Ok, print the entry nicely
        secs-=68400;
        printf("%s: %s", day, strftime("%H:%M", secs))

        # Print anything else at the end as a "label"
        if (NF > 2) {
            for (n=3; n <= NF; n++) {
                label = label " " $n
            }
            sub("^ ", "", label)
            printf(" [%s]", label)
        }
        printf("\n")
    }

    END {
        printf("\n:: Daily totals ::\n")
        for (day in daily) {
            secs=daily[day]-68400;
            printf("%s: %s\n", day, strftime("%H:%M", secs))
        }
    }
    ' ${file}
fi
